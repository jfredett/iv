#!/usr/bin/env bash

source $(dirname `readlink -f $0`)/iv_base

_input() {
  echo "$@" > "$(_ii_path)/in"
}

_check_process_alive() {
  # the spaces around `pid` eliminates false positives where `pid` exists
  # as a substring of another pid
  [ $(pid) ] && ps aux | grep " $(pid) " | grep -v grep
} &> /dev/null

new() {
  if [ $IV_SERVER_NAME ] ; then
    echo "Cannot call new on a server that already seems to exist!"
    exit 51
  fi

  local server=$1
  local port=$2
  local location=$3
  local user=$4

  # start the server
  nohup ii -s $server -p $port -i $location -n $user &>$(_log_path)&
  # save the pid
  echo $! > $(_pid_path $server)
  # write the command-files
  echo "IV_SERVER_NAME=$server iv_server \$@" > $(_bin_path $server)
  # make them executable
  chmod a+x $(_bin_path $server)
}

pid() {
  cat $(_pid_path)
}

halt() {
  _check_process_alive && kill $(pid) # stop the process if it's still alive
  rm $(_bin_path)                     # remove the iv bin
  rm $(_pid_path)                     # remove the saved pid
  rm $(_log_path)                     # remove the error log
  # TODO: make this archive the ii files
  rm -rf $(_ii_path)                  # remove the ii files too
}

join() {
  iv_channel new $IV_SERVER_NAME $1
}

watch() {
  tail -f $(_output_path)
}

if _check_process_alive || [ $1 = 'new' ] ; then
  $@
else
  echo "Process died, halting and cleaning up"
  halt
  exit 101
fi
